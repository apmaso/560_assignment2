<ICD>
  <SystemReset name="" value="" />
  <Module name="execution_unit" DesignLang="Verilog" FileName="../RTL/execution_unit.sv" LineNo="2">
    <ModuleVariant name="execution_unit"  CheckerModule="">
      <Property name="fifo_full_no_req" type="assume" kind="concurrent" InFunction="0" HasLocalVars="0" PropLang="SVA" FileName="../RTL/execution_unit.sv" LineNo="70" MultiAutomata="1">
        <PropertySource><![CDATA[fifo_full_no_req: assume property(@(posedge clk) disable iff ((!rst_b)) (fifo_full |-> (input_req == 0)));

]]></PropertySource>
        <Clock>
        <ClockSignal signal="clk" />
        </Clock>
        <DisableIff>
          <DisableIffSignal signal="rst_b" />
        </DisableIff>
        <PropertyLeafs> 
          <PropertyLeaf signal="clk" />
          <PropertyLeaf signal="fifo_full" />
          <PropertyLeaf signal="input_req" />
        </PropertyLeafs> 
        <RegInitializations> 
          <RegInitialization signal="_SVAC_1_ended_reg_0" rhs="1'b0" />
          <RegInitialization signal="_SVAC_1_ended_reg_1" rhs="1'b0" />
          <RegInitialization signal="_SVAC_1_ended_reg" rhs="1'b0" />
        </RegInitializations> 
        <PropertyEncoding type="Deterministic" kind="negativeAlways" IsTautology="0" >
          <EndedSignal signal="_SVAC_1_ended_reg_0" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="vacuityEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_1_ended_reg_1" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="positiveEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_1_ended_reg" />
        </PropertyEncoding>
      </Property>
      <Property name="input_id_output_id" type="assert" kind="concurrent" InFunction="0" HasLocalVars="0" PropLang="SVA" FileName="../RTL/execution_unit.sv" LineNo="76" MultiAutomata="1">
        <PropertySource><![CDATA[input_id_output_id: assert property(@(posedge clk) disable iff ((!rst_b)) ((input_req.req && input_req.req_id) |-> (s_eventually (output_rsp.rsp_id == $sampled(input_req.req_id)))));

]]></PropertySource>
        <Clock>
        <ClockSignal signal="clk" />
        </Clock>
        <DisableIff>
          <DisableIffSignal signal="rst_b" />
        </DisableIff>
        <PropertyLeafs> 
          <PropertyLeaf signal="clk" />
          <PropertyLeaf signal="input_req.req" />
          <PropertyLeaf signal="input_req.req_id" />
          <PropertyLeaf signal="output_rsp.rsp_id" />
        </PropertyLeafs> 
        <RegInitializations> 
          <RegInitialization signal="_SVAC_2_ended_reg_0" rhs="1'b0" />
          <RegInitialization signal="_SVAC_2_asrt_nd_ended_reg" rhs="1'b0" />
          <RegInitialization signal="_SVAC_2_owe" rhs="4'b1111" />
          <RegInitialization signal="_SVAC_2_owe_0" rhs="4'b0" />
          <RegInitialization signal="_SVAC_2_ended_reg_1" rhs="1'b0" />
          <RegInitialization signal="_SVAC_2_states" rhs="1'b0" />
          <RegInitialization signal="_SVAC_2_ended_reg" rhs="1'b0" />
        </RegInitializations> 
        <PropertyEncoding type="Deterministic" kind="negativeAlways" IsTautology="0" >
          <EndedSignal signal="_SVAC_2_asrt_nd_ended_reg" />
          <InitSignal signal="_SVAC_2_init" />
          <FairnessSignal signal="_SVAC_2_fairness" />
          <InvarSignal signal="_SVAC_2_trans_of_state_0" />
          <InvarSignal signal="_SVAC_2_trans_of_state_1" />
          <InvarSignal signal="_SVAC_2_trans_of_state_2" />
          <InvarSignal signal="_SVAC_2_trans_of_state_3" />
          <NonDetInput signal="_SVAC_2_next_layer[0:3]" />
          <NonDetRegister signal="_SVAC_2_layer[0:3]" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="positiveAlways" IsTautology="0" >
          <EndedSignal signal="_SVAC_2_ended_reg_0" />
          <InitSignal signal="_SVAC_2_init_0" />
          <FairnessSignal signal="_SVAC_2_fairness_0" />
          <InvarSignal signal="_SVAC_2_trans_of_state_0_0" />
          <InvarSignal signal="_SVAC_2_trans_of_state_1_0" />
          <InvarSignal signal="_SVAC_2_trans_of_state_2_0" />
          <InvarSignal signal="_SVAC_2_trans_of_state_3_0" />
          <NonDetInput signal="_SVAC_2_next_layer_0[0:3]" />
          <NonDetRegister signal="_SVAC_2_layer_0[0:3]" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="vacuityEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_2_ended_reg_1" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="positiveEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_2_ended_reg" />
        </PropertyEncoding>
      </Property>
      <Property name="req_to_write_in" type="assert" kind="concurrent" InFunction="0" HasLocalVars="0" PropLang="SVA" FileName="../RTL/execution_unit.sv" LineNo="80" MultiAutomata="1">
        <PropertySource><![CDATA[req_to_write_in: assert property(@(posedge clk) disable iff ((!rst_b)) ((!input_req.req) |-> (!write_in)));

]]></PropertySource>
        <Clock>
        <ClockSignal signal="clk" />
        </Clock>
        <DisableIff>
          <DisableIffSignal signal="rst_b" />
        </DisableIff>
        <PropertyLeafs> 
          <PropertyLeaf signal="clk" />
          <PropertyLeaf signal="input_req.req" />
          <PropertyLeaf signal="write_in" />
        </PropertyLeafs> 
        <RegInitializations> 
          <RegInitialization signal="_SVAC_3_ended_reg_0" rhs="1'b0" />
          <RegInitialization signal="_SVAC_3_ended_reg_1" rhs="1'b0" />
          <RegInitialization signal="_SVAC_3_ended_reg" rhs="1'b0" />
        </RegInitializations> 
        <PropertyEncoding type="Deterministic" kind="negativeAlways" IsTautology="0" >
          <EndedSignal signal="_SVAC_3_ended_reg_0" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="vacuityEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_3_ended_reg_1" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="positiveEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_3_ended_reg" />
        </PropertyEncoding>
      </Property>
      <Property name="output_req_to_add" type="assert" kind="concurrent" InFunction="0" HasLocalVars="0" PropLang="SVA" FileName="../RTL/execution_unit.sv" LineNo="84" MultiAutomata="1">
        <PropertySource><![CDATA[output_req_to_add: assert property(@(posedge clk) disable iff ((!rst_b)) (((output_req.req && (output_req.req_type == 1'b0)) && add_free) |-> read));

]]></PropertySource>
        <Clock>
        <ClockSignal signal="clk" />
        </Clock>
        <DisableIff>
          <DisableIffSignal signal="rst_b" />
        </DisableIff>
        <PropertyLeafs> 
          <PropertyLeaf signal="clk" />
          <PropertyLeaf signal="output_req.req" />
          <PropertyLeaf signal="output_req.req_type" />
          <PropertyLeaf signal="add_free" />
          <PropertyLeaf signal="read" />
        </PropertyLeafs> 
        <RegInitializations> 
          <RegInitialization signal="_SVAC_4_ended_reg_0" rhs="1'b0" />
          <RegInitialization signal="_SVAC_4_ended_reg_1" rhs="1'b0" />
          <RegInitialization signal="_SVAC_4_ended_reg" rhs="1'b0" />
        </RegInitializations> 
        <PropertyEncoding type="Deterministic" kind="negativeAlways" IsTautology="0" >
          <EndedSignal signal="_SVAC_4_ended_reg_0" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="vacuityEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_4_ended_reg_1" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="positiveEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_4_ended_reg" />
        </PropertyEncoding>
      </Property>
      <Property name="output_req_to_mul" type="assert" kind="concurrent" InFunction="0" HasLocalVars="0" PropLang="SVA" FileName="../RTL/execution_unit.sv" LineNo="88" MultiAutomata="1">
        <PropertySource><![CDATA[output_req_to_mul: assert property(@(posedge clk) disable iff ((!rst_b)) (((output_req.req && (output_req.req_type == 1'b1)) && mul_free) |-> read));

]]></PropertySource>
        <Clock>
        <ClockSignal signal="clk" />
        </Clock>
        <DisableIff>
          <DisableIffSignal signal="rst_b" />
        </DisableIff>
        <PropertyLeafs> 
          <PropertyLeaf signal="clk" />
          <PropertyLeaf signal="output_req.req" />
          <PropertyLeaf signal="output_req.req_type" />
          <PropertyLeaf signal="mul_free" />
          <PropertyLeaf signal="read" />
        </PropertyLeafs> 
        <RegInitializations> 
          <RegInitialization signal="_SVAC_5_ended_reg_0" rhs="1'b0" />
          <RegInitialization signal="_SVAC_5_ended_reg_1" rhs="1'b0" />
          <RegInitialization signal="_SVAC_5_ended_reg" rhs="1'b0" />
        </RegInitializations> 
        <PropertyEncoding type="Deterministic" kind="negativeAlways" IsTautology="0" >
          <EndedSignal signal="_SVAC_5_ended_reg_0" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="vacuityEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_5_ended_reg_1" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="positiveEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_5_ended_reg" />
        </PropertyEncoding>
      </Property>
      <VariantInstance name="execution_unit" FileName="../RTL/execution_unit.sv" LineNo="2">
      </VariantInstance>
    </ModuleVariant>
  </Module>
  <Module name="inp_fifo" DesignLang="Verilog" FileName="../RTL/inp_fifo.sv" LineNo="2">
    <ModuleVariant name="inp_fifo"  CheckerModule="">
      <Property name="output_req_valid_if_not_empty" type="assert" kind="concurrent" InFunction="0" HasLocalVars="0" PropLang="SVA" FileName="../RTL/inp_fifo.sv" LineNo="63" MultiAutomata="1">
        <PropertySource><![CDATA[output_req_valid_if_not_empty: assert property(@(posedge clk) disable iff ((!rst_b)) ((!fifo_empty) |-> (output_req == fifo_mem[rd_ptr])));

]]></PropertySource>
        <Clock>
        <ClockSignal signal="clk" />
        </Clock>
        <DisableIff>
          <DisableIffSignal signal="rst_b" />
        </DisableIff>
        <PropertyLeafs> 
          <PropertyLeaf signal="clk" />
          <PropertyLeaf signal="fifo_empty" />
          <PropertyLeaf signal="output_req" />
          <PropertyLeaf signal="fifo_mem[rd_ptr]" />
        </PropertyLeafs> 
        <RegInitializations> 
          <RegInitialization signal="_SVAC_6_ended_reg_0" rhs="1'b0" />
          <RegInitialization signal="_SVAC_6_ended_reg_1" rhs="1'b0" />
          <RegInitialization signal="_SVAC_6_ended_reg" rhs="1'b0" />
        </RegInitializations> 
        <PropertyEncoding type="Deterministic" kind="negativeAlways" IsTautology="0" >
          <EndedSignal signal="_SVAC_6_ended_reg_0" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="vacuityEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_6_ended_reg_1" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="positiveEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_6_ended_reg" />
        </PropertyEncoding>
      </Property>
      <Property name="input_req_valid_if_write_in" type="assert" kind="concurrent" InFunction="0" HasLocalVars="0" PropLang="SVA" FileName="../RTL/inp_fifo.sv" LineNo="66" MultiAutomata="1">
        <PropertySource><![CDATA[input_req_valid_if_write_in: assert property(@(posedge clk) disable iff ((!rst_b)) (write_in |-> (fifo_mem[wr_ptr] == input_req)));

]]></PropertySource>
        <Clock>
        <ClockSignal signal="clk" />
        </Clock>
        <DisableIff>
          <DisableIffSignal signal="rst_b" />
        </DisableIff>
        <PropertyLeafs> 
          <PropertyLeaf signal="clk" />
          <PropertyLeaf signal="write_in" />
          <PropertyLeaf signal="fifo_mem[wr_ptr]" />
          <PropertyLeaf signal="input_req" />
        </PropertyLeafs> 
        <RegInitializations> 
          <RegInitialization signal="_SVAC_7_ended_reg_0" rhs="1'b0" />
          <RegInitialization signal="_SVAC_7_ended_reg_1" rhs="1'b0" />
          <RegInitialization signal="_SVAC_7_ended_reg" rhs="1'b0" />
        </RegInitializations> 
        <PropertyEncoding type="Deterministic" kind="negativeAlways" IsTautology="0" >
          <EndedSignal signal="_SVAC_7_ended_reg_0" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="vacuityEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_7_ended_reg_1" />
        </PropertyEncoding>
        <PropertyEncoding type="Deterministic" kind="positiveEventually" IsTautology="0" >
          <EndedSignal signal="_SVAC_7_ended_reg" />
        </PropertyEncoding>
      </Property>
      <VariantInstance name="execution_unit.i_inp_fifo" FileName="../RTL/execution_unit.sv" LineNo="26">
      </VariantInstance>
    </ModuleVariant>
  </Module>
</ICD>
